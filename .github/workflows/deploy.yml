name: Deploy to ECS

on:
  push:
    branches:
      - main  # mainブランチにプッシュされたときにデプロイ

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"
          echo "ECR URI: $IMAGE_URI"
          
          # Dockerイメージをビルド
          docker build -t "$IMAGE_URI:latest" .
          
          # ECRにプッシュ
          docker push "$IMAGE_URI:latest"

      - name: Extract GCP service account key fields
        run: |
          echo "Extracting GCP service account key fields..."

          # GCPサービスアカウントキーをファイルに書き込む
          echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > gcp_key.json

          # jqを使用してフィールドを抽出し、環境変数に設定
          echo "GCP_PROJECT_ID=$(jq -r '.project_id' gcp_key.json)" >> $GITHUB_ENV
          echo "GCP_PRIVATE_KEY_ID=$(jq -r '.private_key_id' gcp_key.json)" >> $GITHUB_ENV
          echo "GCP_PRIVATE_KEY=$(jq -r '.private_key' gcp_key.json)" >> $GITHUB_ENV
          echo "GCP_CLIENT_EMAIL=$(jq -r '.client_email' gcp_key.json)" >> $GITHUB_ENV
          echo "GCP_CLIENT_ID=$(jq -r '.client_id' gcp_key.json)" >> $GITHUB_ENV
          echo "GCP_AUTH_URI=$(jq -r '.auth_uri' gcp_key.json)" >> $GITHUB_ENV
          echo "GCP_TOKEN_URI=$(jq -r '.token_uri' gcp_key.json)" >> $GITHUB_ENV
          echo "GCP_AUTH_PROVIDER_X509_CERT_URL=$(jq -r '.auth_provider_x509_cert_url' gcp_key.json)" >> $GITHUB_ENV
          echo "GCP_CLIENT_X509_CERT_URL=$(jq -r '.client_x509_cert_url' gcp_key.json)" >> $GITHUB_ENV

          # 一時ファイルを削除
          rm gcp_key.json

      - name: Create ECS task definition
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          # ECRイメージURIを再定義
          IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"

          # ecs-task-def.jsonを生成
          cat <<EOF > ecs-task-def.json
{
  "family": "stock-app-family",
  "networkMode": "awsvpc",
  "containerDefinitions": [
    {
      "name": "stock-app",
      "image": "${IMAGE_URI}:latest",
      "memory": 512,
      "cpu": 256,
      "essential": true,
      "portMappings": [
        {
          "containerPort": 80,
          "hostPort": 80,
          "protocol": "tcp"
        }
      ],
      "environment": [
