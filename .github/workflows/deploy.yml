name: Deploy to ECS

on:
  push:
    branches:
      - main  # main ブランチにプッシュされたときにデプロイ

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          IMAGE_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}"
          echo "ECR URI: $IMAGE_URI"

          # Docker イメージをビルド
          docker build -t "$IMAGE_URI:latest" .

          # ECR にプッシュ
          docker push "$IMAGE_URI:latest"

      - name: Create GCP service account key file
        env:
          GCP_TYPE: ${{ secrets.GCP_TYPE }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_PRIVATE_KEY_ID: ${{ secrets.GCP_PRIVATE_KEY_ID }}
          GCP_PRIVATE_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
          GCP_CLIENT_EMAIL: ${{ secrets.GCP_CLIENT_EMAIL }}
          GCP_CLIENT_ID: ${{ secrets.GCP_CLIENT_ID }}
          GCP_AUTH_URI: ${{ secrets.GCP_AUTH_URI }}
          GCP_TOKEN_URI: ${{ secrets.GCP_TOKEN_URI }}
          GCP_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.GCP_AUTH_PROVIDER_X509_CERT_URL }}
          GCP_CLIENT_X509_CERT_URL: ${{ secrets.GCP_CLIENT_X509_CERT_URL }}
        run: |
          echo "Creating GCP service account key file..."

cat > gcp_key.json <<EOF
{
  "type": "${GCP_TYPE}",
  "project_id": "${GCP_PROJECT_ID}",
  "private_key_id": "${GCP_PRIVATE_KEY_ID}",
  "private_key": "${GCP
